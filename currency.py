# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'currency.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import requests
import pymysql
import re
import sys




class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.setFixedSize(1107, 674)


        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons8-combo-chart-48.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(230, 230, 230);")
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 74, 1107, 201))
        self.widget.setStyleSheet("background-color: rgb(255, 234, 32);")
        self.widget.setObjectName("widget")

        self.label_hp = QtWidgets.QLabel(self.widget)
        self.label_hp.setGeometry(QtCore.QRect(366, 10, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_hp.setFont(font)
        self.label_hp.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_hp.setObjectName("label_hp")
        self.label_lp = QtWidgets.QLabel(self.widget)
        self.label_lp.setGeometry(QtCore.QRect(593, 10, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_lp.setFont(font)
        self.label_lp.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_lp.setObjectName("label_lp")
        self.label_nhp = QtWidgets.QLabel(self.widget)
        self.label_nhp.setGeometry(QtCore.QRect(369, 42, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_nhp.setFont(font)
        self.label_nhp.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_nhp.setText("")
        self.label_nhp.setObjectName("label_nhp")
        self.label_nlp = QtWidgets.QLabel(self.widget)
        self.label_nlp.setGeometry(QtCore.QRect(598, 42, 110, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_nlp.setFont(font)
        self.label_nlp.setStyleSheet("color: rgb(51, 51, 51);\n"
                                     "")
        self.label_nlp.setText("")
        self.label_nlp.setObjectName("label_nlp")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(50, 160, 1011, 451))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                       "")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(11)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(5, item)
        # the table cannot be clicked
        self.tableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        # hide grid
        self.tableWidget.setShowGrid(False)
        # set the width of the columns
        header = self.tableWidget.horizontalHeader()
        header.setSectionResizeMode(0, QHeaderView.ResizeMode.Stretch)
        header.setSectionResizeMode(1, QHeaderView.ResizeMode.ResizeToContents)
        header.setSectionResizeMode(2, QHeaderView.ResizeMode.Stretch)
        header.setSectionResizeMode(3, QHeaderView.ResizeMode.Stretch)
        header.setSectionResizeMode(4, QHeaderView.ResizeMode.Stretch)
        header.setSectionResizeMode(5, QHeaderView.ResizeMode.ResizeToContents)

        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        self.widget_2.setGeometry(QtCore.QRect(0, 545, 1107, 131))
        self.widget_2.setStyleSheet("background-color: rgb(170, 203, 115);")
        self.widget_2.setObjectName("widget_2")
        self.pb_click = QtWidgets.QPushButton(self.widget_2)
        self.pb_click.setGeometry(QtCore.QRect(419, 83, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pb_click.setFont(font)
        self.pb_click.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pb_click.setStyleSheet("QPushButton{\n"
                                    "color: rgb(51, 51, 51);\n"
                                    " background-color: rgb(255, 255, 255);\n"
                                    " border-radius: 10px;\n"
                                    "}\n"
                                    "QPushButton:Hover{\n"
                                    "color: rgb(255, 255, 255);\n"
                                    " background-color:rgb(51, 51, 51) ;\n"
                                    "}\n"
                                    "")
        self.pb_click.setObjectName("pb_click")
        self.pb_click.clicked.connect(self.click)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(100, 30, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(225, 53, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_3.setObjectName("label_3")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(60, 20, 47, 51))
        font = QtGui.QFont()
        font.setPointSize(33)
        self.label_1.setFont(font)
        self.label_1.setStyleSheet("color: rgb(51, 51, 51);")
        self.label_1.setObjectName("label_1")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(270, 20, 61, 51))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("icons8-combo-chart-48.png"))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(500, 50, 200, 21))
        self.label_5.setText("")
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.widget.raise_()
        self.widget_2.raise_()
        self.tableWidget.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.label_1.raise_()
        self.label_4.raise_()
        self.label_5.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

   


    def click(self):
        # connect to the database
        con = pymysql.connect(
            host='localhost',
            user='root',
            password='5742',
            database='coinapi')
        print('ok')
        # delete past data
        c = con.cursor()
        com = "DELETE FROM cointable"
        c.execute(com)
        con.commit()

        try:
            # create an account on https://min-api.cryptocompare.com/ and get an api key
            url = 'https://min-api.cryptocompare.com/data/top/totalvolfull?limit=30&tsym=USD&api_key={yourapikey}'
            # send a request
            res = requests.get(url)
            # list for symbol
            l_symbol = []
            # list for lowest price
            l_price = []
            # list for highest price
            h_price = []
            # number of coins
            n = 0
            while n < 30:
                # get symbol and add to list
                symbol = res.json()["Data"][n]["CoinInfo"]["Name"]
                l_symbol.append(symbol)
                # get full name
                fullname = res.json()["Data"][n]["CoinInfo"]["FullName"]
                # get price
                price = res.json()["Data"][n]["DISPLAY"]["USD"]["PRICE"]
                # remove $ and space 
                p_1 = price.strip('$ ')
                # remove , 
                p_2 = re.sub(',', '', p_1)
                # six decimal places
                l_price.append('%f' % float(p_2))
                h_price.append(float('%f' % float(p_2)))
                # get market cap
                mrc = res.json()["Data"][n]["DISPLAY"]["USD"]["MKTCAP"]
                # get supply
                sup = res.json()["Data"][n]["DISPLAY"]["USD"]["SUPPLY"]
                # find the distance between letter and number in sup
                x = sup.find(' ')  
                supply = sup[x+1:]  
                # get change
                change = res.json()["Data"][n]["DISPLAY"]["USD"]["CHANGEPCT24HOUR"] + '%'
                # get data and set to database
                c = con.cursor()
                com = "INSERT INTO cointable(name, symbol, price, marketcap, supply, change24hr) VALUES (%s, %s, %s, %s, %s, %s)"
                value = (fullname, symbol, price, mrc, supply, change)
                try:
                    c.execute(com, value)
                    con.commit()
                except:
                    print('Error')
                    con.rollback()

                # get data from database and set to table
                c = con.cursor()
                com = "SELECT * FROM cointable"
                try:
                    c.execute(com)
                    # insert record into records variable
                    records = c.fetchall()  
                    # row of my Table
                    self.tableWidget.setRowCount(len(records))
                    # number of rows
                    row = 0 
                    for record in records:  
                        self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(record[0]))      # name            the first value of the record variable in the first column
                        self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(record[1]))      # symbol          the second value of the record variable in the second column
                        self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(record[2]))      # price           the third value of the record variable in the third column
                        self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(record[3]))      # market cap      the fourth value of the record variable in the fourth column
                        self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(record[4]))      # supply          the fifth value of the record variable in the fifth column
                        self.tableWidget.setItem(row, 5, QtWidgets.QTableWidgetItem(record[5]))      # 24hr change     the sixth value of the record variable in the sixth column
                        # add to row
                        row += 1   
                    con.commit()
                    # add to coin
                    n += 1
                except:
                    print('Error')
                    con.rollback()

            s = l_symbol[l_price.index(min(l_price))]
            self.label_nlp.setText(s + ':' + str(min(l_price)))
            s = l_symbol[h_price.index(max(h_price))]
            self.label_nhp.setText(s + ':' + str(max(h_price)))

        except TypeError:
            msg = QMessageBox()
            msg.setWindowTitle("Information")
            msg.setIcon(QMessageBox.Information)
            msg.setText("Try again in a few minutes.")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
            
        # disconnect
        con.close()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Coin API"))
        self.label_hp.setText(_translate("MainWindow", " Highest Price"))
        self.label_lp.setText(_translate("MainWindow", " Lowest Price"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Symbol"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Price"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Market Cap"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Supply"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "24h Change"))
        self.pb_click.setText(_translate("MainWindow", "Click"))
        self.label_2.setText(_translate("MainWindow", " ryptocurrency"))
        self.label_3.setText(_translate("MainWindow", " API"))
        self.label_1.setText(_translate("MainWindow", " C"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


